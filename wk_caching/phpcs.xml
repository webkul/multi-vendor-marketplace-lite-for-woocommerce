<?xml version="1.0"?>
<ruleset name="WordPress WooCommerce Coding Standards" lwdt="202402162022">
	<description>PHP_CodeSniffer version 3.8.0 (stable) by Squiz and PHPCSStandards</description>

	<!-- Exclude paths -->
	<exclude-pattern>tests/</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>

	<!-- Configs -->
	<config name="minimum_wp_version" value="6.0"/>
	<config name="minimum_supported_wp_version" value="6.5" />

	<!-- Check code for cross-version PHP compatibility. -->
	<config name="testVersion" value="7.4-"/>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="wk_caching"/>
			</property>
		</properties>
	</rule>

	<!-- Only check PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="ps"/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>

	<rule ref="WordPress">
		<!-- This project needs to comply with naming standards from PHPCS, not WP. -->
		<exclude name="WordPress.Files.FileName"/>
		<exclude name="WordPress.NamingConventions.ValidVariableName"/>

		<!-- While conditions with assignments are a typical way to walk the token stream. -->
		<exclude name="Generic.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition"/>
	</rule>
	<rule ref="WordPress.DB.PreparedSQL"/>
	<rule ref="WordPress.DB.PreparedSQLPlaceholders"/>

	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->
	<rule ref="WordPress.Arrays.MultipleStatementAlignment">
		<properties>
			<property name="alignMultilineItems" value="!=100"/>
			<property name="exact" value="false" phpcs-only="true"/>
		</properties>
	</rule>
	<rule ref="WordPress.Arrays.ArrayIndentation"/>

	<!-- WordPress Rules -->
	<rule ref="WordPress-Core"/>
	<rule ref="WordPress-Docs"/>
	<rule ref="WordPress-Extra">
		<exclude name="WordPress.WP.TimezoneChange.timezone_change_date_default_timezone_set"/>
		<exclude name="Squiz.Commenting.FileComment.SpacingAfterComment" />
	</rule>

	<rule ref="WordPressVIPMinimum">
		<exclude name="WordPressVIPMinimum.Files.IncludingFile.UsingCustomConstant"/>
		<exclude name="WordPressVIPMinimum.Files.IncludingFile.UsingVariable"/>
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions"/>
	</rule>
	<rule ref="WordPress-VIP-Go"/>
	<rule ref="WordPress.WP.I18n"/>

	<!-- WooCommerce Rules -->
	<rule ref="WooCommerce">
		<exclude name="WooCommerce.Commenting.CommentHooks.MissingHookComment"/>
	</rule>
	<rule ref="WooCommerce-Core"/>

	<!-- Covers rule: Use single and double quotes when appropriate.
		 If you're not evaluating anything in the string, use single quotes. -->
	<rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired"/>

	<!--
	#############################################################################
	Handbook: PHP - Indentation.
	Ref: https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#indentation
	#############################################################################-->
	<!-- Covers rule: Your indentation should always reflect logical structure. -->
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="exact" value="false"/>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
			<property name="ignoreIndentationTokens" type="array">
				<element value="T_HEREDOC"/>
				<element value="T_NOWDOC"/>
				<element value="T_INLINE_HTML"/>
			</property>
		</properties>
	</rule>

	<!-- PHPCompatibility Rules. -->
	<rule ref="PHPCompatibility">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<!--Exclude WooCommerce sanitization function -->
	<rule ref="WordPress.Security.ValidatedSanitizedInput">
		<properties>
			<property name="customSanitizingFunctions" type="array">
				<element value="wc_clean"/>
			</property>
		</properties>
	</rule>

	<!-- WordPress theme files and directories must be named using lowercase letters. Words must be separated by hyphens, not camelCase or underscores. -->
	<rule ref="WordPress.Files.FileName"/>

	<!-- Validate, sanitize, and escape everything. -->
	<rule ref="WordPress.WP.Capabilities">
		<properties>
			<property name="custom_capabilities" type="array">
				<element value="wk_marketplace_seller"/>
			</property>
		</properties>
	</rule>

	<!-- The eval() function must not be used. -->
	<rule ref="Squiz.PHP.Eval.Discouraged">
		<type>error</type>
		<message>eval() is a security risk so not allowed.</message>
	</rule>

	<!-- Single-statement inline control structures are prohibited. Either curly braces should be used (even where they are optional) or where appropriate the alternative syntax for control structures may be used. -->
	<rule ref="Squiz.ControlStructures.ControlSignature"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure"/>

	<!-- A unique prefix must be used for all function names, classes, hooks, public/global variables, action/filter hooks, custom image sizes, constants, database entries, theme-specific scripts and theme-specific styles to avoid conflicts with plugins and other themes. -->
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals"/>

	<!-- Rule: The goto statement must never be used. -->
	<rule ref="Generic.PHP.DiscourageGoto">
		<type>error</type>
		<message>The "goto" language construct should not be used.</message>
	</rule>
	<!-- A few rules not mentioned in the official documentation. -->
	<rule ref="Generic.Files.ByteOrderMark"/>

		<!-- Tabs must be used for indentation. -->
	<arg name="tab-width" value="4"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>

	<!-- The use of PHP short tags is not allowed. -->
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.DisallowAlternativePHPTags"/>

	<!-- The create_function() function has been deprecated as of PHP 7.2.0 and must no longer be used. -->
	<rule ref="WordPress.PHP.RestrictedPHPFunctions"/>

	<!-- The "@" operator must not be used to suppress error messages or notices. -->
	<rule ref="WordPress.PHP.NoSilencedErrors"/>

	<!-- Using the POSIX Regex functions ereg_* arenâ€™t allowed. -->
	<rule ref="WordPress.PHP.POSIXFunctions"/>
	<rule ref="VariableAnalysis"/>

	<rule ref="PSR12">
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="PSR12.Operators.OperatorSpacing"/>
		<exclude name="Generic.Files.LineLength.TooLong"/>
		<exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>
		<exclude name="PSR1.Files.SideEffects.FoundWithSymbols"/>
		<exclude name="PSR1.Methods.CamelCapsMethodName.NotCamelCaps"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceAfterOpenBracket"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceBeforeCloseBracket"/>
		<exclude name="PSR12.ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace"/>
		<exclude name="PSR12.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
  	</rule>

</ruleset>

